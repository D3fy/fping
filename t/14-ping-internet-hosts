#!/usr/bin/perl -w

use strict;
use warnings;

use Test::More;
use t::common;

# evaluate if we have internet
if (!gethostbyname("www.google.com")) {
	plan skip_all => 'Can\'t resolve www.google.com -> no internet?';
	exit 0;
}

my $re_num = qr{\d+(?:\.\d+)?};

subtest "fping" => sub {
	my $cmd = t::Command->new(cmd => "$FPING -q -i 10 -p 20 -c 3 -t200  8.8.8.8 4.2.2.5 www.france-telecom.fr www.google.com");
	$cmd->exit_is_num(0);
	$cmd->stdout_is_eq("");
	$cmd->stderr_like(qr{8\.8\.8\.8\s*: xmt/rcv/%loss = [123]/3/\d+%, min/avg/max = $re_num/$re_num/$re_num
4\.2\.2\.5\s*: xmt/rcv/%loss = [123]/3/\d+%, min/avg/max = $re_num/$re_num/$re_num
www\.france-telecom\.fr\s*: xmt/rcv/%loss = [123]/3/\d+%, min/avg/max = $re_num/$re_num/$re_num
www\.google\.com\s*: xmt/rcv/%loss = [123]/3/\d+%, min/avg/max = $re_num/$re_num/$re_num
});
};
subtest "fping -A -n" => sub {
	my $cmd = t::Command->new(cmd => "$FPING -A -n 8.8.8.8");
	$cmd->exit_is_num(0);
	$cmd->stdout_is_eq("google-public-dns-a.google.com (8.8.8.8) is alive\n");
	$cmd->stderr_is_eq("");
};
subtest "fping -A -n" => sub {
	my $cmd = t::Command->new(cmd => "$FPING -A -n google-public-dns-a.google.com");
	$cmd->exit_is_num(0);
	$cmd->stdout_is_eq("google-public-dns-a.google.com (8.8.8.8) is alive\n");
	$cmd->stderr_is_eq("");
};
subtest "fping6 -A -n" => sub {
	my $cmd = t::Command->new(cmd => "$FPING6 -n -A 2001:4860:4860::8888");
	$cmd->exit_is_num(0);
	$cmd->stdout_is_eq("google-public-dns-a.google.com (2001:4860:4860::8888) is alive\n");
	$cmd->stderr_is_eq("");
};
subtest "fping -m" => sub {
	my $cmd = t::Command->new(cmd => "$FPING -m google-public-dns-a.google.com");
	$cmd->exit_is_num(0);
	$cmd->stdout_is_eq("google-public-dns-a.google.com is alive\n");
	$cmd->stderr_is_eq("");
};
subtest "fping -n" => sub {
	my $cmd = t::Command->new(cmd => "$FPING -n 8.8.8.8");
	$cmd->exit_is_num(0);
	$cmd->stdout_is_eq("google-public-dns-a.google.com is alive\n");
	$cmd->stderr_is_eq("");
};

done_testing;

# vi:syntax=perl
