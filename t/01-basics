#!/usr/bin/perl

use strict;
use warnings;

use Test::More;
use t::common;

subtest "ping 127.0.0.1" => sub {
	my $cmd = Test::Command->new(cmd => "$FPING 127.0.0.1");
	$cmd->exit_is_num(0);
	$cmd->stdout_is_eq("127.0.0.1 is alive\n");
	$cmd->stderr_is_eq("");
};
subtest "ping ::1" => sub {
	my $cmd = Test::Command->new(cmd => "$FPING6 ::1");
	$cmd->exit_is_num(0);
	$cmd->stdout_is_eq("::1 is alive\n");
	$cmd->stderr_is_eq("");
};
subtest "ping 127.0.0.1 3 times" => sub {
	my $cmd = Test::Command->new(cmd => "$FPING -p 100 -C3 127.0.0.1");
	$cmd->exit_is_num(0);
	$cmd->stdout_like(qr{127\.0\.0\.1 : \[0\], 84 bytes, 0\.\d+ ms \(0\.\d+ avg, 0% loss\)
127\.0\.0\.1 : \[1\], 84 bytes, 0\.\d+ ms \(0.\d+ avg, 0% loss\)
127\.0\.0\.1 : \[2\], 84 bytes, 0\.\d+ ms \(0.\d+ avg, 0% loss\)
});
	$cmd->stderr_like(qr{127\.0\.0\.1 : 0\.\d+ 0\.\d+ 0\.\d+\n});
};

done_testing;

#vi:syntax=perl
