#!/usr/bin/perl

use strict;
use warnings;

use Test::More;
use t::common;

subtest "fping -i 9" => sub {
	my $cmd = Test::Command->new(cmd => "$FPING -i 9 -T10 -g 127.0.0.1/29");
	$cmd->exit_is_num(1);
	$cmd->stdout_is_eq("");
	$cmd->stderr_is_eq(<<END);
$FPING: these options are too risky for mere mortals.
$FPING: You need i >= 10, p >= 20, r < 20, and t >= 50
END
};
subtest "fping -p 15" => sub {
	my $cmd = Test::Command->new(cmd => "$FPING -c3 -p 15 127.0.0.1");
	$cmd->exit_is_num(1);
	$cmd->stdout_is_eq("");
	$cmd->stderr_is_eq(<<END);
$FPING: these options are too risky for mere mortals.
$FPING: You need i >= 10, p >= 20, r < 20, and t >= 50
END
};
subtest "fping -r 30" => sub {
	my $cmd = Test::Command->new(cmd => "$FPING -r 30 127.0.0.1");
	$cmd->exit_is_num(1);
	$cmd->stdout_is_eq("");
	$cmd->stderr_is_eq(<<END);
$FPING: these options are too risky for mere mortals.
$FPING: You need i >= 10, p >= 20, r < 20, and t >= 50
END
};
subtest "fping -t 40" => sub {
	my $cmd = Test::Command->new(cmd => "$FPING -t 40 127.0.0.1");
	$cmd->exit_is_num(1);
	$cmd->stdout_is_eq("");
	$cmd->stderr_is_eq(<<END);
$FPING: these options are too risky for mere mortals.
$FPING: You need i >= 10, p >= 20, r < 20, and t >= 50
END
};
subtest "fping -H 300" => sub {
	my $cmd = Test::Command->new(cmd => "$FPING -H 300 127.0.0.1");
	$cmd->exit_is_num(1);
	$cmd->stdout_is_eq("");
	$cmd->stderr_is_eq("ttl 300 out of range\n");
};
subtest "fping -a -u" => sub {
	my $cmd = Test::Command->new(cmd => "$FPING -a -u 127.0.0.1");
	$cmd->exit_is_num(1);
	$cmd->stdout_is_eq("");
	$cmd->stderr_is_eq("$FPING: specify only one of a, u\n");
};
subtest "fping -c -l" => sub {
	my $cmd = Test::Command->new(cmd => "$FPING -c3 -l 127.0.0.1");
	$cmd->exit_is_num(1);
	$cmd->stdout_is_eq("");
	$cmd->stderr_is_eq("$FPING: specify only one of c, l\n");
};
subtest "fping -b 65509" => sub {
	my $cmd = Test::Command->new(cmd => "$FPING -b 65509 127.0.0.1");
	$cmd->exit_is_num(1);
	$cmd->stdout_is_eq("");
	$cmd->stderr_is_eq("$FPING: data size 65509 not valid, must be between 0 and 65508\n");
};
subtest "fping -B 0.9" => sub {
	my $cmd = Test::Command->new(cmd => "$FPING -B 0.9 127.0.0.1");
	$cmd->exit_is_num(1);
	$cmd->stdout_is_eq("");
	$cmd->stderr_is_eq("$FPING: backoff factor 0.9 not valid, must be between 1.0 and 5.0\n");
};
subtest "fping -B 0.9" => sub {
	my $cmd = Test::Command->new(cmd => "$FPING -B 5.1 127.0.0.1");
	$cmd->exit_is_num(1);
	$cmd->stdout_is_eq("");
	$cmd->stderr_is_eq("$FPING: backoff factor 5.1 not valid, must be between 1.0 and 5.0\n");
};
subtest "fping -C 11000" => sub {
	my $cmd = Test::Command->new(cmd => "$FPING -C 11000 127.0.0.1");
	$cmd->exit_is_num(1);
	$cmd->stdout_is_eq("");
	$cmd->stderr_is_eq("$FPING: count 11000 not valid, must be less than 10000\n");
};

done_testing;

# vi:syntax=perl
